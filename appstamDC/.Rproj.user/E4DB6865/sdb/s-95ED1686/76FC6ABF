{
    "collab_server" : "",
    "contents" : "# outliers vector----------------------------------------------------------\n#' NA Completion (xts Vector)\n#' \n#' NA  completion\n#' \n#' @note Use \\code{NA_compl_matrix} for matrix (whole data set). \n#' @param x data as a vector\n#' @param trans_flag code containing the transformation flag, currently only 1 (replace with one-sided median of preceding observations)  and 2 (replace with local median (obs + or - 3 on each side, adjusted if at beginning or end)) supported\n#' @param wind window for median calculation (one-sided) \n#' @details series containing NA values are completed with one-sided median (\\code{wind} preceding obs) \\cr use of two-sided values (3 preceding and 3 following) wouldn't be possible with real time values \\cr (but might be useful for factor detection from past values, or real time with delay - for factor detection...)\n#' @return  transformed vector\n#' @seealso \\code{NA_compl_matrix}\n#' @export\n#' @author Sorin T. Pascu\nNA_compl  <- function(x,trans_flag=1, wind=5) {\n  #   1 replace with one-sided median (5 preceding obs) ----> here as trans_flag = 1 \n  ##   2 replace with local median (obs + or - 3 on each side)\n  ##   3 replace with maximum value\n  ##  4 replace with median value\n  # if (is.null(repl)){repl <- x} #repl = NULL, taken out\n  y  <- x  \n  \n  if(trans_flag == 1) { # replace with one-sided median (window = 5 preceding observations)\n    # browser()\n    for ( i in 1:dim(y)[1]){ # x and y supposed as type xts --> 2 dimensions \n      # in case one of the first 5 values is affected, the median of the remaining preceding values is computed, \n      # including the value itself (for the case of first value being affected) \n      \n      # lag_range  <- ((i>wind)*wind + (i<=wind)*(i-1)):(i>wind)\n      lag_range  <- ((i>wind)*wind + (i<=wind)*(i-1)):1\n      #           avoid missing values from start instead of using na.rm=TRUE ...\n      if (is.na(y[i])) { \n        # browser()\n        y[i]  <- median(lag(y,lag_range)[i]) # compute median over wind=5 lagged values\n        # take median(...y...), of transformed series, as S&W ( not of original ...(x)...)\n      }   \n    }\n  }  else if (trans_flag == 2) { \n    # 2 replace with local median (obs + or - 3 on each side, adjusted if at beginning or end)\n    for ( i in 1:dim(y)[1]){ \n      lag_range  <- (((dim(y)[1]-i)<wind)*(dim(y)[1]-i) + ((dim(y)[1]-i)>i & i >wind)*wind + (i<=wind)*(i-1)):1 # now need to check 3 parts / domains\n      if (is.na(y[i])) { \n        # browser()\n        y[i]  <- median(lag(y,c(-lag_range,lag_range))[i])\n      }   \n    }\n  }  else if (trans_flag == 3) {\n    # some code for other transformations\n  } \n  \n  return(y)\n}\n\n# outliers - matrix -------------------------------------------------------\n#' NA Completion (xts Matrix)\n#' \n#' NA Completion \n#' \n#' @param data data as a matrix\n######' @param header ---  to be adjusted --- header containing a field \"NA_Code\": 1 --> variable is adjusted (otherwise not, e.g. for 0)\n#' @param trans_flag code containing the transformation flag, currently only 1 supported\n#' @param wind window for median calculation (one-sided, preceding) \n#' @details .. \\cr ..\n#' @return  transformed matrix\n#' @seealso \\code{outlier_adj}\n#' @author Sorin T. Pascu\n#' @export\n# NA_compl_matrix  <- function(data, header, repl_matr = NULL, trans_flag=1, wind=5){\nNA_compl_matrix  <- function(data, trans_flag=1, wind=5){\n  transf_data  <- data # create empty object with same object type \n  transf_data[1:dim(transf_data)[1],1:dim(transf_data)[2]]  <- NA # \n  \n  for (i in 1:dim(data)[2]) {\n    # browser()\n    # if(header[\"NA_Code\",colnames(data)[i]] == 1 ){ ####### all are checked, independent of NA_Code\n    transf_data[,i]  <- NA_compl(data[,i, drop=FALSE],trans_flag=trans_flag, wind=wind)   \n    # } ####### all are checked\n  }\n  return(transf_data=transf_data)  \n}\n",
    "created" : 1474447083981.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "669499885",
    "id" : "76FC6ABF",
    "lastKnownWriteTime" : 1474446848,
    "last_content_update" : 1474446848,
    "path" : "A:/021_Projekte/997_appstamDC/R_appstamDC/appstamDC/outlier_functions.r",
    "project_path" : "outlier_functions.r",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}